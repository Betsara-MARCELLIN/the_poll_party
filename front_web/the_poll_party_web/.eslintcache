[{"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/index.js":"1","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/App.js":"2","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/reportWebVitals.js":"3","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/VizuRoom.js":"4","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Home/Home.js":"5","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/GameRoom/GameRoom.js":"6","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/UserList.js":"7","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionList.js":"8","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Classement/Classement.js":"9","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionListVoting.js":"10","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/EventsTabs.js":"11","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionVoting.js":"12","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/ChatRoom/ChatRoom.js":"13","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/QuestionResponse.js":"14","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/useServer.js":"15","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardHeader.js":"16","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Table/Table.js":"17","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/Card.js":"18","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardBody.js":"19","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardFooter.js":"20","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/CustomTabs/CustomTabs.js":"21","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardIcon.js":"22","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/QuestionForm.js":"23","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardHeaderStyle.js":"24","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardStyle.js":"25","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardIconStyle.js":"26","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/tableStyle.js":"27","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/views/dashboardStyle.js":"28","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardBodyStyle.js":"29","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardFooterStyle.js":"30","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/customTabsStyle.js":"31","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/schema.js":"32","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react.js":"33"},{"size":609,"mtime":1612993808663,"results":"34","hashOfConfig":"35"},{"size":675,"mtime":1614724263795,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1612307134688,"results":"37","hashOfConfig":"35"},{"size":1170,"mtime":1614724263799,"results":"38","hashOfConfig":"35"},{"size":1022,"mtime":1614724263799,"results":"39","hashOfConfig":"35"},{"size":3242,"mtime":1614724263799,"results":"40","hashOfConfig":"35"},{"size":1149,"mtime":1614724263799,"results":"41","hashOfConfig":"35"},{"size":2228,"mtime":1614724263799,"results":"42","hashOfConfig":"35"},{"size":704,"mtime":1614724263795,"results":"43","hashOfConfig":"35"},{"size":1786,"mtime":1614724263799,"results":"44","hashOfConfig":"35"},{"size":1384,"mtime":1614724263795,"results":"45","hashOfConfig":"35"},{"size":8212,"mtime":1614724263799,"results":"46","hashOfConfig":"35"},{"size":1219,"mtime":1613840833031,"results":"47","hashOfConfig":"35"},{"size":5771,"mtime":1614724263799,"results":"48","hashOfConfig":"35"},{"size":7040,"mtime":1614725373106,"results":"49","hashOfConfig":"35"},{"size":1258,"mtime":1612993808623,"results":"50","hashOfConfig":"35"},{"size":2196,"mtime":1612993808623,"results":"51","hashOfConfig":"35"},{"size":1050,"mtime":1612993808623,"results":"52","hashOfConfig":"35"},{"size":1018,"mtime":1612993808623,"results":"53","hashOfConfig":"35"},{"size":1174,"mtime":1612993808623,"results":"54","hashOfConfig":"35"},{"size":2710,"mtime":1612993808623,"results":"55","hashOfConfig":"35"},{"size":1040,"mtime":1612993808623,"results":"56","hashOfConfig":"35"},{"size":3488,"mtime":1614724263795,"results":"57","hashOfConfig":"35"},{"size":2955,"mtime":1612993808663,"results":"58","hashOfConfig":"35"},{"size":794,"mtime":1612993808663,"results":"59","hashOfConfig":"35"},{"size":665,"mtime":1612993808663,"results":"60","hashOfConfig":"35"},{"size":1420,"mtime":1612993808663,"results":"61","hashOfConfig":"35"},{"size":1706,"mtime":1612993808663,"results":"62","hashOfConfig":"35"},{"size":298,"mtime":1612993808663,"results":"63","hashOfConfig":"35"},{"size":1038,"mtime":1612993808663,"results":"64","hashOfConfig":"35"},{"size":1515,"mtime":1612993808663,"results":"65","hashOfConfig":"35"},{"size":164,"mtime":1614724263799,"results":"66","hashOfConfig":"35"},{"size":7001,"mtime":1612993808663,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1l1ycom",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/index.js",[],["143","144"],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/App.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/reportWebVitals.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/VizuRoom.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Home/Home.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/GameRoom/GameRoom.js",["145"],"import React from \"react\";\nimport {Row, Col  } from 'reactstrap';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport useServer from \"../../useServer\";\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\nimport QuestionList from \"../Questions/QuestionList\"\nimport QuestionListVoting from \"../Questions/QuestionListVoting\"\nimport QuestionVoting from \"../Questions/QuestionVoting\"\nimport EventsTabs from \"../EventsTabs/EventsTabs\"\nimport Classement from \"../Classement/Classement\"\n\nimport \"./GameRoom.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Link } from \"react-router-dom\";\n\nconst GameRoom = (props) => {\n    const {roomId, publicName} = props.location.query\n    const {messages,\n        questionsVoting,\n        questions,\n        competitorRanking,\n        publicsRanking,\n        responses,\n        isClosedQuestion,\n        isClosedGame,\n        publics,\n        competitors,\n        sendMessage,\n        sendQuestion,\n        sendQuestionVotingResult,\n        orderQuestionsList,\n        orderQuestionsListVote,\n        sendResponseVote } = useServer(roomId, publicName); // Creates a websocket and manages \n\n    return (\n        <div>\n            <Row>\n                <Col md=\"2\" className=\"Question-list\">\n                    <QuestionList questions={questions} orderQuestionsList={orderQuestionsList}/>\n                </Col>\n                <Col md=\"8\" >\n                    <h1 className=\"room-name\">Salle: {props.location.query.roomId}</h1>\n                    {!isClosedGame?\n                        <div>\n                        <QuestionListVoting questionsVoting={questionsVoting}/>\n                        <QuestionVoting questionsVoting={questionsVoting} sendQuestionVotingResult={sendQuestionVotingResult} orderQuestionsListVote={orderQuestionsListVote} sendResponseVote={sendResponseVote}/>\n                        <Row>\n                            <Col md=\"8\">\n                                <EventsTabs sendQuestion={sendQuestion} isClosedQuestion={isClosedQuestion} />\n                            </Col>\n                            <Col md=\"4\">\n                                <Classement users={competitorRanking} name=\"Classement\"/>\n                            </Col>\n                        </Row>\n                        </div>\n                        :\n                        <Link to={{ \n                            pathname:`/${roomId}/vizu`,\n                            query :{roomId:roomId,\n                                questionList: questions, \n                                responses: responses,\n                                publics:publics,\n                                competitors: competitors,\n                                competitorRanking: competitorRanking,\n                                publicRanking: publicsRanking\n                            }}} className=\"visu-room-button\">\n                                Voir le récapitulatif de la partie\n                        </Link> }\n                    \n                </Col>\n                <Col md=\"2\">\n                    <ChatRoom messages={messages} sendMessage={sendMessage}/>\n                </Col>\n            </Row>\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default GameRoom;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/UserList.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionList.js",["146","147","148","149"],"import React from \"react\";\nimport {useState } from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport VibrationIcon from '@material-ui/icons/Vibration';\n\nconst QuestionList = (props) => {\n    const {questions, orderQuestionsList } = props;\n\n    let questionsEnable = [];\n    questions.map(question => (\n        !question.isDisable? questionsEnable.push(question): null\n    ))\n\n    const sendReOrderQuestions = () => {\n        orderQuestionsList(questions)\n      };\n\n    return(\n        <div>\n            <h2>Questions</h2>\n            <Divider />\n            <List>\n            {questions.map((question, i) => (\n                <Card className={question.isDisable? \"question_disable\": \"question_actived\"} variant=\"outlined\">\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Avatar>\n                                {question.type == \"Libre\"?  <TextFieldsIcon />: null}\n                                {question.type == \"Slider\"?  <VibrationIcon />: null}\n                                {question.type == \"Photo\"?  <ImageIcon />: null}\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={\"Question \"+(i+1)} secondary={<Typography variant=\"body2\" style={{ color: '#FFFFFF' }}>{question.question}</Typography>} />\n                    </ListItem>\n                </Card>\n            ))}\n            </List>\n            {questionsEnable.length > 1?<Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => {sendReOrderQuestions()}} ><strong>Changer l'ordre des questions</strong></Button>:null}\n            \n        </div>\n    );\n}\nexport default QuestionList;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Classement/Classement.js",["150"],"import React, { useState } from \"react\";\n\n// core components\nimport Table from \"../Table/Table.js\";\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport Icon from \"@material-ui/core/Icon\";\n\n\nconst Classement =(props) => {\n    const { users, name }= props;\n    return(\n        <Card>\n            <CardHeader color=\"primary\">\n                <Icon>{name}</Icon>\n            </CardHeader>\n            <CardBody>\n\n                <Table\n                    tableHead={[\"Rang\", \"Nom\", \"Points\"]}\n                    tableData={users}\n                />\n            </CardBody>\n        </Card>\n    )\n}\nexport default Classement;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionListVoting.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/EventsTabs.js",["151"],"import React from \"react\";\n\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport Code from \"@material-ui/icons/Code\";\n\n// components\nimport CustomTabs from \"../CustomTabs/CustomTabs.js\";\nimport QuestionForm from \"./QuestionForm\"\n\nconst EventsTabs = (props) => {\n    const { sendQuestion , isClosedQuestion} = props;\n\n    const renderer = () => {\n        if(isClosedQuestion){\n            return <h4 className=\"text-center\">Le maximum de question a été atteint.</h4>\n        }\n        return <QuestionForm sendQuestion={sendQuestion} />\n      };\n\n    return(\n        <CustomTabs\n        title=\"Actions:\"\n        headerColor=\"primary\"\n        tabs={[\n            {\n            tabName: \"Créer une Question\",\n            tabIcon: QuestionAnswerIcon,\n            tabContent: (\n                renderer()\n            )\n            },\n            {\n            tabName: \"Ajouter un Malus\",\n            tabIcon: AnnouncementIcon,\n            tabContent: (\n                <div>Malus</div>\n            )\n            },\n            {\n            tabName: \"Autres...\",\n            tabIcon: Code,\n            tabContent: (\n                <div>autres</div>\n            )\n            }\n        ]}\n    />   \n    )\n}\n\nexport default EventsTabs;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Questions/QuestionVoting.js",["152","153","154","155","156","157","158"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport {Row, Col  } from 'reactstrap';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from '@material-ui/core/Button';\nimport Countdown from 'react-countdown';\n\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardIcon from \"../Card/CardIcon.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardFooter from \"../Card/CardFooter.js\";\n\nimport \"./Question.css\";\n\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle\";\n\nconst useStyles = makeStyles(styles);\n\nconst QuestionVoting = (props) => {\n    const {questionsVoting, sendQuestionVotingResult, orderQuestionsListVote, sendResponseVote} = props;\n    const [vote, setVote] = useState(\"null\");\n    const classes = useStyles();\n\n    \n    const displayTitle = ()=>{\n        if(questionsVoting[0] == null){\n            return \n        }\n        switch(questionsVoting[0].type_data){\n            case \"Question\":\n                return <h3 className={classes.cardTitle}>{questionsVoting[0].question}</h3>\n            case \"Order\":\n                return <h3 className={classes.cardTitle}>Voter pour la prochaine question</h3>\n            case \"Responses\":\n                return <h3 className={classes.cardTitle}>Voter pour la meilleure réponse</h3>\n            default: return\n        }\n    }\n\n    const displayBody= ()=>{\n        if(questionsVoting[0] == null){\n            return <h4 className=\"text-center\">En attente d'évènement</h4>\n        }\n\n        \n        switch(questionsVoting[0].type_data){\n            case \"Question\":\n                return <Row className=\"text-center\">\n                            <Col md=\"2\"><h4>Type : <span>{questionsVoting[0].type}</span> </h4></Col>\n                            <Col md=\"10\"><h4>Réponse : <span>{questionsVoting[0].answer}</span></h4></Col>\n                            \n                        </Row>\n            case \"Order\":\n                return \n            case \"Responses\":\n                return\n            default: return\n        }\n\n    }\n\n    const displayFooter = ()=>{\n        if(questionsVoting[0] == null){\n            return \n        }\n        switch(questionsVoting[0].type_data){\n            case \"Question\":\n                if (vote == \"null\") {\n                    return <CardFooter stats >\n                                <Button className=\"voting-button-yes\" variant=\"contained\" color=\"primary\" onClick={() => { handleSetVote(1) }}>Pour</Button>\n                                <Button className=\"voting-button-no\" variant=\"contained\" color=\"secondary\" onClick={() => { handleSetVote(-1)}}>Contre</Button>\n                            </CardFooter>\n                }\n                return <h4 className=\"text-center\">A voté !</h4>\n            case \"Order\":\n                console.log(questionsVoting[0])\n                return  //<Button  variant=\"contained\" color=\"primary\" > Envoyer</Button>\n            case \"Responses\":\n                return //<Button  variant=\"contained\" color=\"primary\" > Envoyer</Button>\n            default: return <h4 className=\"text-center\">A voté !</h4>\n        }\n\n    }\n    const handleSetVote = (newVote)=>{\n        setVote(newVote);\n        sendQuestionVotingResult(newVote,questionsVoting,questionsVoting[0])\n        setVote(\"null\")\n    }\n\n    const senderResult =() => {\n        if(vote == \"null\"){  \n            sendQuestionVotingResult(0,questionsVoting, questionsVoting[0])\n        }\n        setVote(\"null\")\n    }\n    const handleSendOrder = (data) =>{\n        orderQuestionsListVote(questionsVoting[0][data],questionsVoting,questionsVoting[0])\n    }\n    const handleSendOResponseVote = (q,u) =>{\n        sendResponseVote(q, u,questionsVoting,questionsVoting[0])\n    }\n\n    const renderer = ({ seconds, completed }) => {\n        if(questionsVoting[0] != null){\n            if (completed) {\n                return \"30\";\n            } else {\n            return (<span>{seconds}</span>);\n            }\n        }\n      };\n    \n    const renderTimer = () => {\n        if(questionsVoting[0] != null){\n            return (<Countdown date={Date.now() + 30000} renderer={renderer} /*onComplete={senderResult}*/ />);\n        }else \n            return \"30\"\n    }\n\n    useEffect(() => {\n        renderTimer();\n      });\n\n    return(\n        <Row>\n            <Col md=\"12\">\n                <Card>\n                    <CardHeader color=\"info\" icon>\n                        <CardIcon color=\"info\">\n                            <Icon>Voter pour la Question</Icon>\n                        </CardIcon>\n                        <CardIcon color=\"warning\" className=\"voting-timer\">\n                            <Icon>\n                                {renderTimer()}\n                            </Icon>\n                        </CardIcon>\n                        {displayTitle()}\n                    </CardHeader>\n                    <CardBody>\n                    {displayBody()}\n\n                    {questionsVoting[0]? questionsVoting[0].type_data == \"Order\" ? \n                    <Row>\n                        {questionsVoting.map(questions =>{\n                            return Object.values(questions).map(question=>{\n                                if(question.question){\n                                    if(!question.isDisable)\n                                        return <Col md=\"6\">\n                                                    <Card onClick={() => { handleSendOrder(question.id) }}>\n                                                        <CardHeader color=\"success\">\n                                                            {question.question}\n                                                        </CardHeader>\n                                                        <CardBody>\n                                                            <Row>\n                                                                <Col md=\"2\">\n                                                                    {question.type}\n                                                                </Col>\n                                                                <Col md=\"10\">\n                                                                    {question.answer} \n                                                                </Col>\n                                                            </Row>\n                                                            \n                                                        </CardBody>\n                                                    </Card>\n                                                </Col>\n                                        \n                                }\n\n                            })\n                        })}</Row>:<div></div>:<div></div>}\n\n                    {questionsVoting[0]? questionsVoting[0].type_data == \"Responses\" ? \n                    <Row>\n                        {questionsVoting.map(responses =>{\n                            return Object.values(responses).map(response=>{\n                                if(response.response)\n                                    return <Col md=\"6\">\n                                                <Card onClick={() => {handleSendOResponseVote(response.questionId, response.senderId) }}>\n                                                    <CardHeader color=\"success\">\n                                                        {response.name}\n                                                    </CardHeader>\n                                                    <CardBody>\n                                                        <img className=\"media\" src={response.response} alt={response.name}/>\n                                                    </CardBody>\n                                                </Card>\n                                            </Col>\n                            })\n                        })}</Row>:<div></div>:<div></div>}\n                    </CardBody>\n                    {displayFooter()}\n                </Card>\n            </Col>\n        </Row>\n    )\n}\nexport default QuestionVoting;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/ChatRoom/ChatRoom.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/VisualitionRoom/QuestionResponse.js",["159","160","161","162","163","164","165"],"import React from \"react\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {Row, Col  } from 'reactstrap';\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from '@material-ui/core/Button';\n\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardIcon from \"../Card/CardIcon.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardFooter from \"../Card/CardFooter.js\";\n\nimport Classement from \"../Classement/Classement\"\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle\";\nimport { Divider } from \"@material-ui/core\";\nconst useStyles = makeStyles(styles);\n\nconst QuestionResponses = (props) => {\n    const {questionList, responses, competitorRanking, publicRanking} = props\n    const classes = useStyles();\n    const history = useHistory();\n    const [questionCounter, setQuestionCounter] = useState({value: 0,});\n    const [responsesForQuestion, setResponsesForQuestion] = useState([])\n\n    \n    const handleQuit = useCallback(() => history.push('/'), [history]);\n    const handleQuestionCounter = (index)=> {setQuestionCounter({value : questionCounter.value+index})}\n\n\n\n    const displayFooter = ()=>{\n        if (questionCounter.value == 0){\n            return <CardFooter stats >\n                        <Button className=\"button_next_alone\"variant=\"contained\" color=\"primary\" onClick={() => { handleQuestionCounter(1)}}>Suivante</Button>\n                    </CardFooter>\n        }\n        if(questionCounter.value == Object.values(questionList).length){\n            return <CardFooter stats >\n                        <Button className=\"button-prev\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(-1) }}>Précedente </Button>\n                        <Button className=\"button-next\" variant=\"contained\" color=\"secondary\" onClick={() => {handleQuit() }}>Quitter</Button>\n                    </CardFooter>\n        }\n        return <CardFooter stats >\n                    <Button className=\"button-prev\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(-1) }}>Précedente </Button>\n                    <Button className=\"button-next\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(1) }}>Suivante</Button>\n                </CardFooter>\n        \n    }\n    console.log(responses.filter(r => r.questionId === questionList[questionCounter.value].id))\nreturn(\n    <Row>\n        <Col md=\"12\">\n            {questionCounter.value == Object.values(questionList).length?\n            <Card>\n                <CardHeader color=\"info\" icon>\n                    <CardIcon color=\"info\">\n                        <Icon>Classement des participants</Icon>\n                    </CardIcon>\n                </CardHeader>\n            <Row>\n                <Col md=\"6\">\n                    <Classement users={publicRanking} name=\"Publics\"/>\n                </Col>\n                <Col md=\"6\">\n                    <Classement users={competitorRanking} name=\"Compétiteurs\"/>\n                </Col>\n            </Row>\n            {displayFooter()}\n            </Card>\n            \n            :\n            <Card>\n            <CardHeader color=\"info\" icon>\n                <CardIcon color=\"info\">\n                    <Icon>Resultat de la Question</Icon>\n                </CardIcon>\n                <h3 className={classes.cardTitle}>{questionList[questionCounter.value].question}</h3>\n            </CardHeader>\n            <CardBody>\n                <Row className=\"text-center\">\n                    <Col md=\"2\"><h4>Type : <span>{questionList[questionCounter.value].type}</span> </h4></Col>\n                    <Col md=\"10\"><h4>Réponse : <span>{questionList[questionCounter.value].answer}</span></h4></Col>\n                </Row>\n                <Divider />\n                <Row>\n                    {responses.filter(r => r.questionId === questionList[questionCounter.value].id).map(responses =>{\n                        return Object.values(responses).map(response=>{\n                            console.log(response)\n                            if(response.type == \"Photo\"){\n                                return <Col md=\"6\">\n                                            <Card>\n                                                <CardHeader color=\"success\">\n                                                    {response.name}\n                                                </CardHeader>\n                                                <CardBody>\n                                                    <img className=\"media\" src={response.response} alt={response.name}/>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                            }else{\n                                return <Col md=\"6\">\n                                            <Card>\n                                                <CardHeader color=\"success\">\n                                                    {response.name}\n                                                </CardHeader>\n                                                <CardBody>\n                                                    {response.response}\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                            }   \n                        })\n                    })}\n                </Row>\n            </CardBody>\n            {displayFooter()}\n        </Card>\n            }\n\n        </Col>\n    </Row>\n)\n}\nexport default QuestionResponses;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/useServer.js",["166","167","168","169","170","171"],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardHeader.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Table/Table.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/Card.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardBody.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardFooter.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/CustomTabs/CustomTabs.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/Card/CardIcon.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/QuestionForm.js",["172","173","174"],"import React from 'react';\nimport {useState } from \"react\";\nimport { Button, FormGroup, Label, Input, FormText, Row, Col} from 'reactstrap';\nimport { Field, FieldError, Form } from 'react-jsonschema-form-validation';\nimport schema from \"./schema\"\n\nconst QuestionForm = (props) => {\n    const { sendQuestion } = props; //get send question from parent\n    const [questionType, setQuestionType] = useState('Libre')\n    const [formData, setFormData] = useState({\n\t\tquestion: '',\n\t\treponses: '',\n        timer: '30',\n\n\t});\n    const handleChange = (newData) => { setFormData(newData); };\n    const handleChangeResponse = (response) => {setFormData({reponses: response});}\n\n    const handleSendQuestion = () => {\n        sendQuestion(formData.question, formData.reponses, questionType, formData.timer);\n        setFormData({reponses: \"\", question: \"\"});\n      };\n\n    /**const createAnswer = (event) => {\n        if( questionType === \"Libre\"){\n            setResponses(event.target.value)\n        }else if (questionType === \"QCM\"){\n            setResponses(\"5\")\n        }else{\n            setResponses(\"null\")\n        }\n    }*/\n\n    function displayFormAnswerType(){\n        switch(questionType){\n            case \"Libre\":\n                return <FormGroup>\n                    <Label for=\"reponses\">Réponse</Label>\n                    <Field component={Input} type=\"input\" name=\"reponses\" id=\"reponses\" placeholder=\"Reponse\" value={formData.reponses} />\n                    <FieldError name=\"reponses\" />\n                </FormGroup>\n            case \"Slider\":\n                return <FormGroup>\n                <Label for=\"reponses\">Réponse</Label>\n                <Field component={Input} type=\"input\" name=\"reponses\" id=\"reponses\" placeholder=\"Reponse\" value={formData.reponses} />\n                <FieldError name=\"reponses\" />\n            </FormGroup>\n            case \"Photo\":\n                return\n                \n            default:\n                return \n        }\n            \n    }\n\n    return (\n\t\t<Form\n\t\t\tdata={formData}\n\t\t\tonChange={handleChange}\n\t\t\tonSubmit={handleSendQuestion}\n\t\t\tschema={schema}\n\t\t>\n            <FormGroup>\n                <Label for=\"question\">Question</Label>\n                <Field component={Input} type=\"input\" name=\"question\" id=\"question\" placeholder=\"Question\" value={formData.question} />\n                <FieldError name=\"question\" />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"image\">Image ( optionnel )</Label>\n                <Input type=\"file\" name=\"image\" id=\"image\" />\n                <FormText color=\"muted\">\n                    <div>\n                        Image coupler a la question\n                    </div>\n                </FormText>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"questionType\">Type de question</Label>\n                <Input required type=\"select\" name=\"questionType\" id=\"questionType\" onChange={(event)=> {setQuestionType(event.target.value)}}>\n                    <option value=\"Libre\">Libre</option>\n                    <option value=\"QCM\">QCM</option>\n                    <option value=\"Slider\">Slider(shake)</option>\n                    <option value=\"Photo\">Photo</option>\n                    <option value=\"Dessins\">Dessins</option>\n                </Input>\n            </FormGroup>\n            {displayFormAnswerType()}\n            <Button type=\"submit\" color=\"info\">Envoyer</Button>\n        </Form>\n    );\n}\n\nexport default QuestionForm;","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardHeaderStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardIconStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/tableStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/views/dashboardStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardBodyStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/cardFooterStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react/components/customTabsStyle.js",[],"/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/Component/EventsTabs/schema.js",["175"],"export default {\n\ttype: 'object',\n\tproperties: {\n\t\tquestion: { type: 'string'},\n\t\treponses: { type: 'string', maxLength: 120 }\n\t},\n\trequired: [\n\t\t'question',\n\t],\n};","/home/btsar/STUDY/SI5/INTERFACES_TACTILES_ET_REPARTIES/the_poll_party/front_web/the_poll_party_web/src/assets/jss/material-dashboard-react.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":4,"column":26,"nodeType":"182","messageId":"183","endLine":4,"endColumn":31},{"ruleId":"180","severity":1,"message":"184","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":39,"column":48,"nodeType":"187","messageId":"188","endLine":39,"endColumn":50},{"ruleId":"185","severity":1,"message":"186","line":40,"column":48,"nodeType":"187","messageId":"188","endLine":40,"endColumn":50},{"ruleId":"185","severity":1,"message":"186","line":41,"column":48,"nodeType":"187","messageId":"188","endLine":41,"endColumn":50},{"ruleId":"180","severity":1,"message":"184","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"189","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":71,"column":26,"nodeType":"187","messageId":"188","endLine":71,"endColumn":28},{"ruleId":"180","severity":1,"message":"190","line":93,"column":11,"nodeType":"182","messageId":"183","endLine":93,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":94,"column":17,"nodeType":"187","messageId":"188","endLine":94,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":145,"column":71,"nodeType":"187","messageId":"188","endLine":145,"endColumn":73},{"ruleId":"191","severity":1,"message":"192","line":148,"column":73,"nodeType":"193","messageId":"194","endLine":148,"endColumn":75},{"ruleId":"185","severity":1,"message":"186","line":175,"column":71,"nodeType":"187","messageId":"188","endLine":175,"endColumn":73},{"ruleId":"191","severity":1,"message":"192","line":178,"column":73,"nodeType":"193","messageId":"194","endLine":178,"endColumn":75},{"ruleId":"180","severity":1,"message":"195","line":2,"column":33,"nodeType":"182","messageId":"183","endLine":2,"endColumn":42},{"ruleId":"180","severity":1,"message":"196","line":27,"column":12,"nodeType":"182","messageId":"183","endLine":27,"endColumn":32},{"ruleId":"180","severity":1,"message":"197","line":27,"column":34,"nodeType":"182","messageId":"183","endLine":27,"endColumn":57},{"ruleId":"185","severity":1,"message":"186","line":36,"column":35,"nodeType":"187","messageId":"188","endLine":36,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":41,"column":34,"nodeType":"187","messageId":"188","endLine":41,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":57,"column":36,"nodeType":"187","messageId":"188","endLine":57,"endColumn":38},{"ruleId":"185","severity":1,"message":"186","line":93,"column":46,"nodeType":"187","messageId":"188","endLine":93,"endColumn":48},{"ruleId":"180","severity":1,"message":"198","line":1,"column":39,"nodeType":"182","messageId":"183","endLine":1,"endColumn":46},{"ruleId":"185","severity":1,"message":"199","line":69,"column":26,"nodeType":"187","messageId":"188","endLine":69,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":81,"column":32,"nodeType":"187","messageId":"188","endLine":81,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":97,"column":38,"nodeType":"187","messageId":"188","endLine":97,"endColumn":40},{"ruleId":"200","severity":1,"message":"201","line":128,"column":8,"nodeType":"202","endLine":128,"endColumn":16,"suggestions":"203"},{"ruleId":"185","severity":1,"message":"186","line":173,"column":32,"nodeType":"187","messageId":"188","endLine":173,"endColumn":34},{"ruleId":"180","severity":1,"message":"204","line":3,"column":53,"nodeType":"182","messageId":"183","endLine":3,"endColumn":56},{"ruleId":"180","severity":1,"message":"205","line":3,"column":58,"nodeType":"182","messageId":"183","endLine":3,"endColumn":61},{"ruleId":"180","severity":1,"message":"206","line":17,"column":11,"nodeType":"182","messageId":"183","endLine":17,"endColumn":31},{"ruleId":"207","severity":1,"message":"208","line":1,"column":1,"nodeType":"209","endLine":10,"endColumn":3},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Icon' is defined but never used.","'senderResult' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'responsesForQuestion' is assigned a value but never used.","'setResponsesForQuestion' is assigned a value but never used.","'version' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'publicName' and 'questions'. Either include them or remove the dependency array.","ArrayExpression",["212"],"'Row' is defined but never used.","'Col' is defined but never used.","'handleChangeResponse' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},"Update the dependencies array to be: [publicName, questions, roomId]",{"range":"215","text":"216"},[4540,4548],"[publicName, questions, roomId]"]