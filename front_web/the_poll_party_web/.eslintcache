[{"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\index.js":"1","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\reportWebVitals.js":"2","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\App.js":"3","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\GameRoom\\GameRoom.js":"4","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Home\\Home.js":"5","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionList.js":"6","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionVoting.js":"7","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionListVoting.js":"8","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\ChatRoom\\ChatRoom.js":"9","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\EventsTabs.js":"10","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Classement\\Classement.js":"11","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\useServer.js":"12","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardIcon.js":"13","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\Card.js":"14","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardHeader.js":"15","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardBody.js":"16","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardFooter.js":"17","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\CustomTabs\\CustomTabs.js":"18","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Table\\Table.js":"19","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\QuestionForm.js":"20","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js":"21","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"22","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"23","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"24","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardIconStyle.js":"25","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardFooterStyle.js":"26","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"27","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\customTabsStyle.js":"28","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\schema.js":"29","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react.js":"30","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\VizuRoom.js":"31","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\UserList.js":"32","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\QuestionResponse.js":"33"},{"size":630,"mtime":1612797547974,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1612467534387,"results":"36","hashOfConfig":"35"},{"size":699,"mtime":1614269721360,"results":"37","hashOfConfig":"35"},{"size":3324,"mtime":1614299459830,"results":"38","hashOfConfig":"35"},{"size":1063,"mtime":1614288462196,"results":"39","hashOfConfig":"35"},{"size":2281,"mtime":1614291009655,"results":"40","hashOfConfig":"35"},{"size":8410,"mtime":1614297038430,"results":"41","hashOfConfig":"35"},{"size":1834,"mtime":1614289372082,"results":"42","hashOfConfig":"35"},{"size":1265,"mtime":1613080491899,"results":"43","hashOfConfig":"35"},{"size":1437,"mtime":1614282955957,"results":"44","hashOfConfig":"35"},{"size":731,"mtime":1614298786927,"results":"45","hashOfConfig":"35"},{"size":7260,"mtime":1614333191362,"results":"46","hashOfConfig":"35"},{"size":1040,"mtime":1612798108773,"results":"47","hashOfConfig":"35"},{"size":1050,"mtime":1612798108772,"results":"48","hashOfConfig":"35"},{"size":1258,"mtime":1612798108773,"results":"49","hashOfConfig":"35"},{"size":1018,"mtime":1612798108772,"results":"50","hashOfConfig":"35"},{"size":1174,"mtime":1612798108773,"results":"51","hashOfConfig":"35"},{"size":2710,"mtime":1612798693416,"results":"52","hashOfConfig":"35"},{"size":2196,"mtime":1612798153899,"results":"53","hashOfConfig":"35"},{"size":3581,"mtime":1614207455290,"results":"54","hashOfConfig":"35"},{"size":1706,"mtime":1612798593425,"results":"55","hashOfConfig":"35"},{"size":298,"mtime":1612796368416,"results":"56","hashOfConfig":"35"},{"size":2955,"mtime":1612798452514,"results":"57","hashOfConfig":"35"},{"size":794,"mtime":1612798460011,"results":"58","hashOfConfig":"35"},{"size":665,"mtime":1612798456361,"results":"59","hashOfConfig":"35"},{"size":1038,"mtime":1612798444627,"results":"60","hashOfConfig":"35"},{"size":1420,"mtime":1612798540833,"results":"61","hashOfConfig":"35"},{"size":1515,"mtime":1612798473482,"results":"62","hashOfConfig":"35"},{"size":173,"mtime":1614207443188,"results":"63","hashOfConfig":"35"},{"size":7001,"mtime":1612796368460,"results":"64","hashOfConfig":"35"},{"size":1205,"mtime":1614294077830,"results":"65","hashOfConfig":"35"},{"size":1184,"mtime":1614293226359,"results":"66","hashOfConfig":"35"},{"size":5898,"mtime":1614333191359,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"cbpkid",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\index.js",[],["143","144"],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\reportWebVitals.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\App.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\GameRoom\\GameRoom.js",["145"],"import React from \"react\";\r\nimport {Row, Col  } from 'reactstrap';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport useServer from \"../../useServer\";\r\nimport ChatRoom from \"../ChatRoom/ChatRoom\";\r\nimport QuestionList from \"../Questions/QuestionList\"\r\nimport QuestionListVoting from \"../Questions/QuestionListVoting\"\r\nimport QuestionVoting from \"../Questions/QuestionVoting\"\r\nimport EventsTabs from \"../EventsTabs/EventsTabs\"\r\nimport Classement from \"../Classement/Classement\"\r\n\r\nimport \"./GameRoom.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GameRoom = (props) => {\r\n    const {roomId, publicName} = props.location.query\r\n    const {messages,\r\n        questionsVoting,\r\n        questions,\r\n        competitorRanking,\r\n        publicsRanking,\r\n        responses,\r\n        isClosedQuestion,\r\n        isClosedGame,\r\n        publics,\r\n        competitors,\r\n        sendMessage,\r\n        sendQuestion,\r\n        sendQuestionVotingResult,\r\n        orderQuestionsList,\r\n        orderQuestionsListVote,\r\n        sendResponseVote } = useServer(roomId, publicName); // Creates a websocket and manages \r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md=\"2\" className=\"Question-list\">\r\n                    <QuestionList questions={questions} orderQuestionsList={orderQuestionsList}/>\r\n                </Col>\r\n                <Col md=\"8\" >\r\n                    <h1 className=\"room-name\">Salle: {props.location.query.roomId}</h1>\r\n                    {!isClosedGame?\r\n                        <div>\r\n                        <QuestionListVoting questionsVoting={questionsVoting}/>\r\n                        <QuestionVoting questionsVoting={questionsVoting} sendQuestionVotingResult={sendQuestionVotingResult} orderQuestionsListVote={orderQuestionsListVote} sendResponseVote={sendResponseVote}/>\r\n                        <Row>\r\n                            <Col md=\"8\">\r\n                                <EventsTabs sendQuestion={sendQuestion} isClosedQuestion={isClosedQuestion} />\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Classement users={competitorRanking} name=\"Classement\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                        :\r\n                        <Link to={{ \r\n                            pathname:`/${roomId}/vizu`,\r\n                            query :{roomId:roomId,\r\n                                questionList: questions, \r\n                                responses: responses,\r\n                                publics:publics,\r\n                                competitors: competitors,\r\n                                competitorRanking: competitorRanking,\r\n                                publicRanking: publicsRanking\r\n                            }}} className=\"visu-room-button\">\r\n                                Voir le récapitulatif de la partie\r\n                        </Link> }\r\n                    \r\n                </Col>\r\n                <Col md=\"2\">\r\n                    <ChatRoom messages={messages} sendMessage={sendMessage}/>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameRoom;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Home\\Home.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionList.js",["146","147","148","149"],"import React from \"react\";\r\nimport {useState } from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport VibrationIcon from '@material-ui/icons/Vibration';\r\n\r\nconst QuestionList = (props) => {\r\n    const {questions, orderQuestionsList } = props;\r\n\r\n    let questionsEnable = [];\r\n    questions.map(question => (\r\n        !question.isDisable? questionsEnable.push(question): null\r\n    ))\r\n\r\n    const sendReOrderQuestions = () => {\r\n        orderQuestionsList(questions)\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            <h2>Questions</h2>\r\n            <Divider />\r\n            <List>\r\n            {questions.map((question, i) => (\r\n                <Card className={question.isDisable? \"question_disable\": \"question_actived\"} variant=\"outlined\">\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                {question.type == \"Libre\"?  <TextFieldsIcon />: null}\r\n                                {question.type == \"Slider\"?  <VibrationIcon />: null}\r\n                                {question.type == \"Photo\"?  <ImageIcon />: null}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={\"Question \"+(i+1)} secondary={<Typography variant=\"body2\" style={{ color: '#FFFFFF' }}>{question.question}</Typography>} />\r\n                    </ListItem>\r\n                </Card>\r\n            ))}\r\n            </List>\r\n            {questionsEnable.length > 1?<Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => {sendReOrderQuestions()}} ><strong>Changer l'ordre des questions</strong></Button>:null}\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default QuestionList;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionVoting.js",["150","151","152","153","154","155","156"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport {Row, Col  } from 'reactstrap';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Countdown from 'react-countdown';\r\n\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\n\r\nimport \"./Question.css\";\r\n\r\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst QuestionVoting = (props) => {\r\n    const {questionsVoting, sendQuestionVotingResult, orderQuestionsListVote, sendResponseVote} = props;\r\n    const [vote, setVote] = useState(\"null\");\r\n    const classes = useStyles();\r\n\r\n    \r\n    const displayTitle = ()=>{\r\n        if(questionsVoting[0] == null){\r\n            return \r\n        }\r\n        switch(questionsVoting[0].type_data){\r\n            case \"Question\":\r\n                return <h3 className={classes.cardTitle}>{questionsVoting[0].question}</h3>\r\n            case \"Order\":\r\n                return <h3 className={classes.cardTitle}>Voter pour la prochaine question</h3>\r\n            case \"Responses\":\r\n                return <h3 className={classes.cardTitle}>Voter pour la meilleure réponse</h3>\r\n            default: return\r\n        }\r\n    }\r\n\r\n    const displayBody= ()=>{\r\n        if(questionsVoting[0] == null){\r\n            return <h4 className=\"text-center\">En attente d'évènement</h4>\r\n        }\r\n\r\n        \r\n        switch(questionsVoting[0].type_data){\r\n            case \"Question\":\r\n                return <Row className=\"text-center\">\r\n                            <Col md=\"2\"><h4>Type : <span>{questionsVoting[0].type}</span> </h4></Col>\r\n                            <Col md=\"10\"><h4>Réponse : <span>{questionsVoting[0].answer}</span></h4></Col>\r\n                            \r\n                        </Row>\r\n            case \"Order\":\r\n                return \r\n            case \"Responses\":\r\n                return\r\n            default: return\r\n        }\r\n\r\n    }\r\n\r\n    const displayFooter = ()=>{\r\n        if(questionsVoting[0] == null){\r\n            return \r\n        }\r\n        switch(questionsVoting[0].type_data){\r\n            case \"Question\":\r\n                if (vote == \"null\") {\r\n                    return <CardFooter stats >\r\n                                <Button className=\"voting-button-yes\" variant=\"contained\" color=\"primary\" onClick={() => { handleSetVote(1) }}>Pour</Button>\r\n                                <Button className=\"voting-button-no\" variant=\"contained\" color=\"secondary\" onClick={() => { handleSetVote(-1)}}>Contre</Button>\r\n                            </CardFooter>\r\n                }\r\n                return <h4 className=\"text-center\">A voté !</h4>\r\n            case \"Order\":\r\n                console.log(questionsVoting[0])\r\n                return  //<Button  variant=\"contained\" color=\"primary\" > Envoyer</Button>\r\n            case \"Responses\":\r\n                return //<Button  variant=\"contained\" color=\"primary\" > Envoyer</Button>\r\n            default: return <h4 className=\"text-center\">A voté !</h4>\r\n        }\r\n\r\n    }\r\n    const handleSetVote = (newVote)=>{\r\n        setVote(newVote);\r\n        sendQuestionVotingResult(newVote,questionsVoting,questionsVoting[0])\r\n        setVote(\"null\")\r\n    }\r\n\r\n    const senderResult =() => {\r\n        if(vote == \"null\"){  \r\n            sendQuestionVotingResult(0,questionsVoting, questionsVoting[0])\r\n        }\r\n        setVote(\"null\")\r\n    }\r\n    const handleSendOrder = (data) =>{\r\n        orderQuestionsListVote(questionsVoting[0][data],questionsVoting,questionsVoting[0])\r\n    }\r\n    const handleSendOResponseVote = (q,u) =>{\r\n        sendResponseVote(q, u,questionsVoting,questionsVoting[0])\r\n    }\r\n\r\n    const renderer = ({ seconds, completed }) => {\r\n        if(questionsVoting[0] != null){\r\n            if (completed) {\r\n                return \"30\";\r\n            } else {\r\n            return (<span>{seconds}</span>);\r\n            }\r\n        }\r\n      };\r\n    \r\n    const renderTimer = () => {\r\n        if(questionsVoting[0] != null){\r\n            return (<Countdown date={Date.now() + 30000} renderer={renderer} /*onComplete={senderResult}*/ />);\r\n        }else \r\n            return \"30\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        renderTimer();\r\n      });\r\n\r\n    return(\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <CardHeader color=\"info\" icon>\r\n                        <CardIcon color=\"info\">\r\n                            <Icon>Voter pour la Question</Icon>\r\n                        </CardIcon>\r\n                        <CardIcon color=\"warning\" className=\"voting-timer\">\r\n                            <Icon>\r\n                                {renderTimer()}\r\n                            </Icon>\r\n                        </CardIcon>\r\n                        {displayTitle()}\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    {displayBody()}\r\n\r\n                    {questionsVoting[0]? questionsVoting[0].type_data == \"Order\" ? \r\n                    <Row>\r\n                        {questionsVoting.map(questions =>{\r\n                            return Object.values(questions).map(question=>{\r\n                                if(question.question){\r\n                                    if(!question.isDisable)\r\n                                        return <Col md=\"6\">\r\n                                                    <Card onClick={() => { handleSendOrder(question.id) }}>\r\n                                                        <CardHeader color=\"success\">\r\n                                                            {question.question}\r\n                                                        </CardHeader>\r\n                                                        <CardBody>\r\n                                                            <Row>\r\n                                                                <Col md=\"2\">\r\n                                                                    {question.type}\r\n                                                                </Col>\r\n                                                                <Col md=\"10\">\r\n                                                                    {question.answer} \r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            \r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                        \r\n                                }\r\n\r\n                            })\r\n                        })}</Row>:<div></div>:<div></div>}\r\n\r\n                    {questionsVoting[0]? questionsVoting[0].type_data == \"Responses\" ? \r\n                    <Row>\r\n                        {questionsVoting.map(responses =>{\r\n                            return Object.values(responses).map(response=>{\r\n                                if(response.response)\r\n                                    return <Col md=\"6\">\r\n                                                <Card onClick={() => {handleSendOResponseVote(response.questionId, response.senderId) }}>\r\n                                                    <CardHeader color=\"success\">\r\n                                                        {response.name}\r\n                                                    </CardHeader>\r\n                                                    <CardBody>\r\n                                                        <img className=\"media\" src={response.response} alt={response.name}/>\r\n                                                    </CardBody>\r\n                                                </Card>\r\n                                            </Col>\r\n                            })\r\n                        })}</Row>:<div></div>:<div></div>}\r\n                    </CardBody>\r\n                    {displayFooter()}\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default QuestionVoting;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Questions\\QuestionListVoting.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\ChatRoom\\ChatRoom.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\EventsTabs.js",["157"],"import React from \"react\";\r\n\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport Code from \"@material-ui/icons/Code\";\r\n\r\n// components\r\nimport CustomTabs from \"../CustomTabs/CustomTabs.js\";\r\nimport QuestionForm from \"./QuestionForm\"\r\n\r\nconst EventsTabs = (props) => {\r\n    const { sendQuestion , isClosedQuestion} = props;\r\n\r\n    const renderer = () => {\r\n        if(isClosedQuestion){\r\n            return <h4 className=\"text-center\">Le maximum de question a été atteint.</h4>\r\n        }\r\n        return <QuestionForm sendQuestion={sendQuestion} />\r\n      };\r\n\r\n    return(\r\n        <CustomTabs\r\n        title=\"Actions:\"\r\n        headerColor=\"primary\"\r\n        tabs={[\r\n            {\r\n            tabName: \"Créer une Question\",\r\n            tabIcon: QuestionAnswerIcon,\r\n            tabContent: (\r\n                renderer()\r\n            )\r\n            },\r\n            {\r\n            tabName: \"Ajouter un Malus\",\r\n            tabIcon: AnnouncementIcon,\r\n            tabContent: (\r\n                <div>Malus</div>\r\n            )\r\n            },\r\n            {\r\n            tabName: \"Autres...\",\r\n            tabIcon: Code,\r\n            tabContent: (\r\n                <div>autres</div>\r\n            )\r\n            }\r\n        ]}\r\n    />   \r\n    )\r\n}\r\n\r\nexport default EventsTabs;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Classement\\Classement.js",["158"],"import React, { useState } from \"react\";\r\n\r\n// core components\r\nimport Table from \"../Table/Table.js\";\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n\r\nconst Classement =(props) => {\r\n    const { users, name }= props;\r\n    return(\r\n        <Card>\r\n            <CardHeader color=\"primary\">\r\n                <Icon>{name}</Icon>\r\n            </CardHeader>\r\n            <CardBody>\r\n\r\n                <Table\r\n                    tableHead={[\"Rang\", \"Nom\", \"Points\"]}\r\n                    tableData={users}\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\nexport default Classement;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\useServer.js",["159","160","161","162","163","164"],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardIcon.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\Card.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardHeader.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardBody.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Card\\CardFooter.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\CustomTabs\\CustomTabs.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\Table\\Table.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\QuestionForm.js",["165","166","167"],"import React from 'react';\r\nimport {useState } from \"react\";\r\nimport { Button, FormGroup, Label, Input, FormText, Row, Col} from 'reactstrap';\r\nimport { Field, FieldError, Form } from 'react-jsonschema-form-validation';\r\nimport schema from \"./schema\"\r\n\r\nconst QuestionForm = (props) => {\r\n    const { sendQuestion } = props; //get send question from parent\r\n    const [questionType, setQuestionType] = useState('Libre')\r\n    const [formData, setFormData] = useState({\r\n\t\tquestion: '',\r\n\t\treponses: '',\r\n        timer: '30',\r\n\r\n\t});\r\n    const handleChange = (newData) => { setFormData(newData); };\r\n    const handleChangeResponse = (response) => {setFormData({reponses: response});}\r\n\r\n    const handleSendQuestion = () => {\r\n        sendQuestion(formData.question, formData.reponses, questionType, formData.timer);\r\n        setFormData({reponses: \"\", question: \"\"});\r\n      };\r\n\r\n    /**const createAnswer = (event) => {\r\n        if( questionType === \"Libre\"){\r\n            setResponses(event.target.value)\r\n        }else if (questionType === \"QCM\"){\r\n            setResponses(\"5\")\r\n        }else{\r\n            setResponses(\"null\")\r\n        }\r\n    }*/\r\n\r\n    function displayFormAnswerType(){\r\n        switch(questionType){\r\n            case \"Libre\":\r\n                return <FormGroup>\r\n                    <Label for=\"reponses\">Réponse</Label>\r\n                    <Field component={Input} type=\"input\" name=\"reponses\" id=\"reponses\" placeholder=\"Reponse\" value={formData.reponses} />\r\n                    <FieldError name=\"reponses\" />\r\n                </FormGroup>\r\n            case \"Slider\":\r\n                return <FormGroup>\r\n                <Label for=\"reponses\">Réponse</Label>\r\n                <Field component={Input} type=\"input\" name=\"reponses\" id=\"reponses\" placeholder=\"Reponse\" value={formData.reponses} />\r\n                <FieldError name=\"reponses\" />\r\n            </FormGroup>\r\n            case \"Photo\":\r\n                return\r\n                \r\n            default:\r\n                return \r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n\t\t<Form\r\n\t\t\tdata={formData}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tonSubmit={handleSendQuestion}\r\n\t\t\tschema={schema}\r\n\t\t>\r\n            <FormGroup>\r\n                <Label for=\"question\">Question</Label>\r\n                <Field component={Input} type=\"input\" name=\"question\" id=\"question\" placeholder=\"Question\" value={formData.question} />\r\n                <FieldError name=\"question\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"image\">Image ( optionnel )</Label>\r\n                <Input type=\"file\" name=\"image\" id=\"image\" />\r\n                <FormText color=\"muted\">\r\n                    <div>\r\n                        Image coupler a la question\r\n                    </div>\r\n                </FormText>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"questionType\">Type de question</Label>\r\n                <Input required type=\"select\" name=\"questionType\" id=\"questionType\" onChange={(event)=> {setQuestionType(event.target.value)}}>\r\n                    <option value=\"Libre\">Libre</option>\r\n                    <option value=\"QCM\">QCM</option>\r\n                    <option value=\"Slider\">Slider(shake)</option>\r\n                    <option value=\"Photo\">Photo</option>\r\n                    <option value=\"Dessins\">Dessins</option>\r\n                </Input>\r\n            </FormGroup>\r\n            {displayFormAnswerType()}\r\n            <Button type=\"submit\" color=\"info\">Envoyer</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default QuestionForm;","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardIconStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\cardFooterStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react\\components\\customTabsStyle.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\EventsTabs\\schema.js",["168"],"export default {\r\n\ttype: 'object',\r\n\tproperties: {\r\n\t\tquestion: { type: 'string'},\r\n\t\treponses: { type: 'string', maxLength: 120 }\r\n\t},\r\n\trequired: [\r\n\t\t'question',\r\n\t],\r\n};","C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\assets\\jss\\material-dashboard-react.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\VizuRoom.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\UserList.js",[],"C:\\Users\\neoge\\Desktop\\polytech\\SI5\\Bimestre 2\\interfaces\\the_poll_party\\front_web\\the_poll_party_web\\src\\Component\\VisualitionRoom\\QuestionResponse.js",["169","170","171","172","173","174","175"],"import React from \"react\";\r\nimport { useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Row, Col  } from 'reactstrap';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\n\r\nimport Classement from \"../Classement/Classement\"\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle\";\r\nimport { Divider } from \"@material-ui/core\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst QuestionResponses = (props) => {\r\n    const {questionList, responses, competitorRanking, publicRanking} = props\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [questionCounter, setQuestionCounter] = useState({value: 0,});\r\n    const [responsesForQuestion, setResponsesForQuestion] = useState([])\r\n\r\n    \r\n    const handleQuit = useCallback(() => history.push('/'), [history]);\r\n    const handleQuestionCounter = (index)=> {setQuestionCounter({value : questionCounter.value+index})}\r\n\r\n    const updateData = () =>{setResponsesForQuestion(responses.filter(r => r.questionId === questionList[questionCounter.value].id))}\r\n\r\n\r\n    const displayFooter = ()=>{\r\n        if (questionCounter.value == 0){\r\n            return <CardFooter stats >\r\n                        <Button className=\"button_next_alone\"variant=\"contained\" color=\"primary\" onClick={() => { handleQuestionCounter(1)}}>Suivante</Button>\r\n                    </CardFooter>\r\n        }\r\n        if(questionCounter.value == Object.values(questionList).length){\r\n            return <CardFooter stats >\r\n                        <Button className=\"button-prev\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(-1) }}>Précedente </Button>\r\n                        <Button className=\"button-next\" variant=\"contained\" color=\"secondary\" onClick={() => {handleQuit() }}>Quitter</Button>\r\n                    </CardFooter>\r\n        }\r\n        return <CardFooter stats >\r\n                    <Button className=\"button-prev\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(-1) }}>Précedente </Button>\r\n                    <Button className=\"button-next\" variant=\"contained\" color=\"primary\" onClick={() => {handleQuestionCounter(1) }}>Suivante</Button>\r\n                </CardFooter>\r\n        \r\n    }\r\n    console.log(Object.values(questionList).length)\r\n    console.log(questionCounter.value)\r\nreturn(\r\n    <Row>\r\n        <Col md=\"12\">\r\n            {questionCounter.value == Object.values(questionList).length?\r\n            <Card>\r\n                <CardHeader color=\"info\" icon>\r\n                    <CardIcon color=\"info\">\r\n                        <Icon>Classement des participants</Icon>\r\n                    </CardIcon>\r\n                </CardHeader>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Classement users={publicRanking} name=\"Publics\"/>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Classement users={competitorRanking} name=\"Compétiteurs\"/>\r\n                </Col>\r\n            </Row>\r\n            {displayFooter()}\r\n            </Card>\r\n            \r\n            :\r\n            <Card>\r\n            <CardHeader color=\"info\" icon>\r\n                <CardIcon color=\"info\">\r\n                    <Icon>Resultat de la Question</Icon>\r\n                </CardIcon>\r\n                <h3 className={classes.cardTitle}>{questionList[questionCounter.value].question}</h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Row className=\"text-center\">\r\n                    <Col md=\"2\"><h4>Type : <span>{questionList[questionCounter.value].type}</span> </h4></Col>\r\n                    <Col md=\"10\"><h4>Réponse : <span>{questionList[questionCounter.value].answer}</span></h4></Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                    {responsesForQuestion.map(responses =>{\r\n                        return Object.values(responses).map(response=>{\r\n                            if(response.type == \"Photo\"){\r\n                                return <Col md=\"6\">\r\n                                            <Card>\r\n                                                <CardHeader color=\"success\">\r\n                                                    {response.name}\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    <img className=\"media\" src={response.response} alt={response.name}/>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                            }else{\r\n                                return <Col md=\"6\">\r\n                                            <Card>\r\n                                                <CardHeader color=\"success\">\r\n                                                    {response.name}\r\n                                                </CardHeader>\r\n                                                <CardBody>\r\n                                                    {response.response}\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                            }   \r\n                        })\r\n                    })}\r\n                </Row>\r\n            </CardBody>\r\n            {displayFooter()}\r\n        </Card>\r\n            }\r\n\r\n        </Col>\r\n    </Row>\r\n)\r\n}\r\nexport default QuestionResponses;",{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":4,"column":26,"nodeType":"182","messageId":"183","endLine":4,"endColumn":31},{"ruleId":"180","severity":1,"message":"184","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":39,"column":48,"nodeType":"187","messageId":"188","endLine":39,"endColumn":50},{"ruleId":"185","severity":1,"message":"186","line":40,"column":48,"nodeType":"187","messageId":"188","endLine":40,"endColumn":50},{"ruleId":"185","severity":1,"message":"186","line":41,"column":48,"nodeType":"187","messageId":"188","endLine":41,"endColumn":50},{"ruleId":"185","severity":1,"message":"186","line":71,"column":26,"nodeType":"187","messageId":"188","endLine":71,"endColumn":28},{"ruleId":"180","severity":1,"message":"189","line":93,"column":11,"nodeType":"182","messageId":"183","endLine":93,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":94,"column":17,"nodeType":"187","messageId":"188","endLine":94,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":145,"column":71,"nodeType":"187","messageId":"188","endLine":145,"endColumn":73},{"ruleId":"190","severity":1,"message":"191","line":148,"column":73,"nodeType":"192","messageId":"193","endLine":148,"endColumn":75},{"ruleId":"185","severity":1,"message":"186","line":175,"column":71,"nodeType":"187","messageId":"188","endLine":175,"endColumn":73},{"ruleId":"190","severity":1,"message":"191","line":178,"column":73,"nodeType":"192","messageId":"193","endLine":178,"endColumn":75},{"ruleId":"180","severity":1,"message":"194","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":12},{"ruleId":"180","severity":1,"message":"184","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"195","line":1,"column":39,"nodeType":"182","messageId":"183","endLine":1,"endColumn":46},{"ruleId":"185","severity":1,"message":"196","line":69,"column":26,"nodeType":"187","messageId":"188","endLine":69,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":81,"column":32,"nodeType":"187","messageId":"188","endLine":81,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":97,"column":38,"nodeType":"187","messageId":"188","endLine":97,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":128,"column":8,"nodeType":"199","endLine":128,"endColumn":16,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"186","line":173,"column":32,"nodeType":"187","messageId":"188","endLine":173,"endColumn":34},{"ruleId":"180","severity":1,"message":"201","line":3,"column":53,"nodeType":"182","messageId":"183","endLine":3,"endColumn":56},{"ruleId":"180","severity":1,"message":"202","line":3,"column":58,"nodeType":"182","messageId":"183","endLine":3,"endColumn":61},{"ruleId":"180","severity":1,"message":"203","line":17,"column":11,"nodeType":"182","messageId":"183","endLine":17,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":1,"column":1,"nodeType":"206","endLine":10,"endColumn":3},{"ruleId":"180","severity":1,"message":"207","line":2,"column":33,"nodeType":"182","messageId":"183","endLine":2,"endColumn":42},{"ruleId":"180","severity":1,"message":"208","line":27,"column":12,"nodeType":"182","messageId":"183","endLine":27,"endColumn":32},{"ruleId":"180","severity":1,"message":"209","line":27,"column":34,"nodeType":"182","messageId":"183","endLine":27,"endColumn":57},{"ruleId":"185","severity":1,"message":"186","line":36,"column":35,"nodeType":"187","messageId":"188","endLine":36,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":41,"column":34,"nodeType":"187","messageId":"188","endLine":41,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":57,"column":36,"nodeType":"187","messageId":"188","endLine":57,"endColumn":38},{"ruleId":"185","severity":1,"message":"186","line":93,"column":46,"nodeType":"187","messageId":"188","endLine":93,"endColumn":48},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'senderResult' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Icon' is defined but never used.","'version' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'publicName' and 'questions'. Either include them or remove the dependency array.","ArrayExpression",["212"],"'Row' is defined but never used.","'Col' is defined but never used.","'handleChangeResponse' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'responsesForQuestion' is assigned a value but never used.","'setResponsesForQuestion' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},"Update the dependencies array to be: [publicName, questions, roomId]",{"range":"215","text":"216"},[4671,4679],"[publicName, questions, roomId]"]